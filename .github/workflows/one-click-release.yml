name: One Click Release

on:
  workflow_dispatch:
    inputs:
      channel:
        required: true
        type: choice
        description: Select a channel. For cloud, use main branch only!
        options:
          - ga
          - beta
          - cloud
      pre_release:
        type: boolean
        description: 'Pre-release?'
        required: false

env:
  CHANNEL: ${{inputs.channel}}
  CHANGELOG_FILE: "temp-changelog.txt"

permissions:
  contents: write
  id-token: "write"

jobs:
  configure-env-variables:
    runs-on: ubuntu-22.04
    outputs:
      PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      CLEAN_PACKAGE_VERSION: ${{ env.CLEAN_PACKAGE_VERSION }}
      CURRENT_CHANNEL_VERSION: ${{ env.CURRENT_CHANNEL_VERSION }}
      CLEAN_REF: ${{ env.CLEAN_REF }}
      PLUGIN_ZIP_FILENAME: ${{ env.PLUGIN_ZIP_FILENAME }}
      PREVIOUS_TAG_SHA: ${{ env.PREVIOUS_TAG_SHA }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.branch}}

      - name: Env Vars Configure
        id: env_vars_configure
        uses: ./.github/workflows/env-vars-configure
        with:
          CHANNEL: ${{ env.CHANNEL }}
          REF: ${{ github.ref }}
          POSTFIX: ''

      - name: Bump Channel Version
        id: bump_channel_version
        uses: ./.github/workflows/bump-channel-version
        with:
          CLEAN_PACKAGE_VERSION: ${{ env.CLEAN_PACKAGE_VERSION }}
          CHANNEL: ${{ env.CHANNEL }}
          POSTFIX: ''
          OVERRIDE_PACKAGE_VERSION: true

  build-plugin:
    name: Build Plugin
    needs: [configure-env-variables]
    uses: ./.github/workflows/plugin-build.yml
    with:
      IS_RELEASE: true
      PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_VERSION }}
      PACKAGE_FILES_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_FILES_VERSION }}

  release:
    runs-on: ubuntu-22.04
    needs: [ build-plugin, configure-env-variables ]
    env:
      PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_VERSION }}
      CLEAN_PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.CLEAN_PACKAGE_VERSION }}
      CURRENT_CHANNEL_VERSION: ${{ needs.configure-env-variables.outputs.CURRENT_CHANNEL_VERSION }}
      CLEAN_REF: ${{ needs.configure-env-variables.outputs.CLEAN_REF }}
      PLUGIN_ZIP_FILENAME: ${{ needs.configure-env-variables.outputs.PLUGIN_ZIP_FILENAME }}
      PREVIOUS_TAG_SHA: ${{ needs.configure-env-variables.outputs.PREVIOUS_TAG_SHA }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.branch}}

      - name: Get Configuration
        id: configuration
        uses: rgarcia-phi/json-to-variables@9835d537368468c4e4de5254dc3efeadda183793
        with:
          filename: "./.github/workflows/config.json"
          prefix: config

      - name: Install Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Update Readme.txt
        if: env.CHANNEL != 'cloud'
        uses: ./.github/workflows/update-readme-txt
        with:
          README_TXT_PATH: $GITHUB_WORKSPACE/readme.txt
          CHANNEL: ${{ env.CHANNEL }}
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
          UPDATE_BETA_TAG: true
          UPDATE_STABLE_TAG: true

      - name: Install Dependencies
        run: |
          npm ci
          ls -al

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-plugin.outputs.artifact_name }}
          path: ./elementor

      - name: Zip the downloaded build
        run: |
          ls -al
          ls -al elementor

          PLUGIN_ZIP_FILENAME=elementor-${{ env.PACKAGE_VERSION }}.zip
          zip -r ${PLUGIN_ZIP_FILENAME} elementor

      - name: Get Release Name
        uses : ./.github/workflows/get-release-name
        with:
          BUILD_ZIP_FILE_PATH: ${{ github.event.repository.name }}-${{ env.PACKAGE_VERSION }}.zip
          PLUGIN_NAME: ${{ github.event.repository.name }}

      - name: Check that the version contains an updated change log
        if: github.event.inputs.channel == 'ga'
        uses: ./.github/workflows/get-changelog-from-changelog-txt
        with:
          VERSION: ${{ env.CLEAN_PACKAGE_VERSION }}
