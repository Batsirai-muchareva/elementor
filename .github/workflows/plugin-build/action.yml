name: Plugin Build
description: Build the plugin and create a zip file.

inputs:
  REPOSITORY:
    required: true
    description: 'The name of the repository to build the plugin from.'
    default: "elementor"

outputs:
  artifact_name:
    description: "The name of the generated zip file."
    value: ${{ steps.build_plugin.outputs.PLUGIN_ZIP_FILENAME }}
  changelog_diff:
    description: "Changes in the changelog file."
    value: "test"

runs:
  using: "composite"
  steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Check if this is only a changelog PR
      id: changelog_diff_files
      uses: technote-space/get-diff-action@v6
      with:
        # PATTERNS are:
        # Everything: **/*
        # Everything in directories starting with a period: .*/**/*
        # Not readme.txt: !readme.txt
        # Not changelog.txt: !changelog.txt
        PATTERNS: |
          **/*
          .*/**/*
          !readme.txt
          !changelog.txt

    - name: Install Dependencies
      shell: bash
      run: |
        npm ci
        composer install --optimize-autoloader --prefer-dist
        composer install --no-scripts --no-dev
        composer dump-autoload

    - name: Build Plugin
      id: build_plugin
      shell: bash
      run: |
        npm config set git-tag-version false
        export PUPPETEER_SKIP_DOWNLOAD=true

        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        DATE_VERSION=$(date '+%Y%m%d.%H%M')
        PLUGIN_VERSION=${PACKAGE_VERSION}-${DATE_VERSION}
        PLUGIN_FILENAME=${{ inputs.REPOSITORY }}-${PLUGIN_VERSION}
        PLUGIN_ZIP_FILENAME=${PLUGIN_FILENAME}.zip

        npx grunt build

        sed -i -E "s/Version: (.*?)/Version: ${PLUGIN_VERSION}/g" build/${{ inputs.REPOSITORY }}.php
        sed -i -E "s/ELEMENTOR_VERSION', '(.*?)'/ELEMENTOR_VERSION', '${PLUGIN_VERSION}'/g" build/${{ inputs.REPOSITORY }}.php

        mv build ${{ inputs.REPOSITORY }}

        zip -r ${PLUGIN_ZIP_FILENAME} ${{ inputs.REPOSITORY }}

        echo "PLUGIN_ZIP_FILENAME=${PLUGIN_ZIP_FILENAME}" >> $GITHUB_OUTPUT
        echo "PLUGIN_ZIP_FILENAME=${PLUGIN_ZIP_FILENAME}" >> $GITHUB_ENV

    - name: Upload Build Zip Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PLUGIN_ZIP_FILENAME }}
        path: ${{ inputs.REPOSITORY }}

    - name: Set Outputs
      shell: bash
      run: |
        echo "${{ env.PLUGIN_ZIP_FILENAME }}"
        echo "Uploading artifact: ${{ steps.build_plugin.outputs.PLUGIN_ZIP_FILENAME }}"
        echo "Uploading artifact: ${{ steps.build_plugin.outputs.plugin_zip_filename }}"


