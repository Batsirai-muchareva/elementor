name: Plugin Build
description: Build the plugin and create a zip file.

inputs:
  PACKAGE_VERSION:
    required: false
    description: 'Optional. The version of the package to use.'
    default: ""

outputs:
  artifact_name:
    description: "The name of the generated zip file."
    value: ${{ steps.build_plugin.outputs.PLUGIN_ZIP_FILENAME }}

runs:
  using: "composite"
  steps:
    - name: Install Dependencies
      shell: bash
      run: |
        npm ci
        composer install --optimize-autoloader --prefer-dist
        composer install --no-scripts --no-dev
        composer dump-autoload

    - name: Set GitHub Repository Name Environment Variable
      shell: bash
      run: |
        REPOSITORY_NAME=$(echo "${{ github.repository }}" | awk -F/ '{print $NF}')

        echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

    - name: Build Plugin
      id: build_plugin
      shell: bash
      run: |
        npm config set git-tag-version false
        export PUPPETEER_SKIP_DOWNLOAD=true
        echo "${{ env.REPOSITORY_NAME }}"

        npx grunt build

        if [ -z "${{ inputs.PACKAGE_VERSION }}" ]; then
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          DATE_VERSION=$(date '+%Y%m%d.%H%M')
          PLUGIN_VERSION=${PACKAGE_VERSION}-${DATE_VERSION}

          sed -i -E "s/Version: (.*?)/Version: ${PLUGIN_VERSION}/g" build/${{ env.REPOSITORY_NAME }}.php
          sed -i -E "s/ELEMENTOR_VERSION', '(.*?)'/ELEMENTOR_VERSION', '${PLUGIN_VERSION}'/g" build/${{ env.REPOSITORY_NAME }}.php

        else
          PACKAGE_VERSION=${{ inputs.PACKAGE_VERSION }}
          PLUGIN_VERSION=${PACKAGE_VERSION}

        fi

        PLUGIN_FILENAME=${{ env.REPOSITORY_NAME }}-${PLUGIN_VERSION}
        PLUGIN_ZIP_FILENAME=${PLUGIN_FILENAME}.zip

        mv build ${{ env.REPOSITORY_NAME }}

        zip -r ${PLUGIN_ZIP_FILENAME} ${{ env.REPOSITORY_NAME }}

        echo "PLUGIN_ZIP_FILENAME=${PLUGIN_ZIP_FILENAME}" >> $GITHUB_OUTPUT

    - name: Upload Build Zip Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build_plugin.outputs.PLUGIN_ZIP_FILENAME }}
        path: ${{ env.REPOSITORY_NAME }}
