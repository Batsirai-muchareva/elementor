name: Automated Latest Release

on:
  workflow_dispatch:
    inputs:
      channel:
        required: true
        type: choice
        description: Select a channel. For cloud, use main branch only!
        options:
          - ga
          - beta
          - cloud
      PRERELEASE:
        type: boolean
        description: 'Pre-release?'
        required: false

env:
  CHANNEL: ${{inputs.channel}}
  PRERELEASE: 'false'

permissions:
  contents: write
  id-token: write
  pull-requests: write

# Cancel in-progress jobs or runs for the current workflow run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  configure-env-variables:
    runs-on: ubuntu-22.04
    outputs:
      PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      CLEAN_PACKAGE_VERSION: ${{ env.CLEAN_PACKAGE_VERSION }}
      CURRENT_CHANNEL_VERSION: ${{ env.CURRENT_CHANNEL_VERSION }}
      CLEAN_REF: ${{ env.CLEAN_REF }}
      PLUGIN_ZIP_FILENAME: ${{ env.PLUGIN_ZIP_FILENAME }}
      PLUGIN_ZIP_PATH: ${{ env.PLUGIN_ZIP_PATH }}
      PACKAGE_FILES_VERSION: ${{ env.PACKAGE_FILES_VERSION }}
      PREVIOUS_TAG_SHA: ${{ env.PREVIOUS_TAG_SHA }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set POSTFIX value
        id: set_postfix_value
        uses: ./.github/workflows/set-postfix-value
        with:
          PRERELEASE: ${{ env.PRERELEASE }}

      - name: Env Vars Configure
        id: env_vars_configure
        uses: ./.github/workflows/env-vars-configure
        with:
          CHANNEL: ${{ env.CHANNEL }}
          REF: ${{ github.ref }}
          POSTFIX: ${{ steps.set_postfix_value.outputs.postfix }}

      - name: Bump Channel Version
        id: bump_channel_version
        uses: ./.github/workflows/bump-channel-version
        with:
          CLEAN_PACKAGE_VERSION: ${{ env.CLEAN_PACKAGE_VERSION }}
          CHANNEL: ${{ env.CHANNEL }}
          POSTFIX: ${{ steps.set_postfix_value.outputs.postfix }}
          OVERRIDE_PACKAGE_VERSION: true

  build-plugin:
    name: Build Plugin
    needs: [configure-env-variables]
    uses: ./.github/workflows/plugin-build.yml
    with:
      PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_VERSION }}
      PACKAGE_FILES_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_FILES_VERSION }}

  latest_release:
    needs: [ build-plugin, configure-env-variables ]
    env:
      PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.PACKAGE_VERSION }}
      CLEAN_PACKAGE_VERSION: ${{ needs.configure-env-variables.outputs.CLEAN_PACKAGE_VERSION }}
      CURRENT_CHANNEL_VERSION: ${{ needs.configure-env-variables.outputs.CURRENT_CHANNEL_VERSION }}
      CLEAN_REF: ${{ needs.configure-env-variables.outputs.CLEAN_REF }}
      PLUGIN_ZIP_FILENAME: ${{ needs.configure-env-variables.outputs.PLUGIN_ZIP_FILENAME }}
      PLUGIN_ZIP_PATH: ${{ needs.configure-env-variables.outputs.PLUGIN_ZIP_PATH }}
      PREVIOUS_TAG_SHA: ${{ needs.configure-env-variables.outputs.PREVIOUS_TAG_SHA }}
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
      - name: checkout branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get Configuration
        id: configuration
        uses: rgarcia-phi/json-to-variables@9835d537368468c4e4de5254dc3efeadda183793
        with:
          filename: './.github/workflows/config.json'
          prefix: config

      - name: Install Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: |
          npm ci
          ls -al

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-plugin.outputs.artifact_name }}
          path: ./elementor

      - name: Zip the downloaded build
        run: |
          ls -al
          ls -al elementor

          PLUGIN_ZIP_FILENAME=elementor-${{ env.PACKAGE_VERSION }}.zip
          cat elementor/elementor.php

          zip -r ${PLUGIN_ZIP_FILENAME} elementor
